<?xml version="1.0" encoding="UTF-8"?>
<launch>

 <!-- 
  SLAM tutorial 3: This tutorial shows the benefits of having an closed-loop state estimator and SLAM system. Given a rosbag called `tutorial.bag`
  within `/open3d_slam_rsl/ros/open3d_slam_ros/data/` folder.

  The multi-sensor fusion pipeline (Graph MSF) and SLAM framework (Open3D SLAM) are coupled as 2 co-dependent systems.

  The odometry source is selected as `/graph_msf/est_odometry_odom_imu` topic which is the propageted fusion output of GMSF.
  To ensure correct usage of the odometry topic, the frame of the odometry should be provided, this time it is `imu`.
  As GMSF tracks the pose of the `imu` frame in it's own odometry frame.
  For simplicity, this is already corrected entered to the `tutorial_3_LiDAR_SLAM_with_SE.launch` file.

  For details of this configuration check the `tutorial_3_LiDAR_SLAM_with_SE.launch` launch file and `tutorial_3_LiDAR_SLAM_with_SE.lua` configuration file.
 
  This launch file will launch GMSF and Open3D slam and automatically replay the rosbag
 -->

  <arg name="launch_rviz" default="false"/>
  <arg name="launch_model" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="launch_se_rviz" default="true"/>
  <arg name="launch_gmsf" default="true"/>

  <!-- Launch Stack -->
  <include file="$(find open3d_slam_ros)/launch/tutorials/tutorial_3_LiDAR_SLAM_with_SE.launch">
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="launch_rviz" value="$(arg launch_rviz)" />
      <arg name="launch_model" value="$(arg launch_model)" />
      <arg name="launch_se_rviz" value="$(arg launch_se_rviz)" />
      <arg name="launch_gmsf" value="$(arg launch_gmsf)" />

  </include>

</launch>