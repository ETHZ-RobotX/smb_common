<?xml version="1.0" encoding="UTF-8"?>
<launch>
  
  <!-- launch versavis: ADIS 16448 IMU and FLIR blackfly rgb cam -->
  <arg name="launch_versavis"
       default="true" 
       doc="Launch the RGB camera and IMU related nodes (triggered through versavis)"/>

  <!-- launch depth cam -->
  <arg name="launch_depth_cam"
       default="false"
       doc="Launch the depth camera related nodes"/>

  <!-- launch tracking cam -->
  <arg name="launch_tracking_cam"
       default="true" 
       doc="Launch the tracking camera related nodes"/>
       
  <arg name="tracking_cam_calib_odom_file"
       default="$(find smb)/config/tracking_camera_config.json"
       doc="path to config for odometry input to tracking camera (see https://github.com/IntelRealSense/librealsense/pull/3462" />

  <!-- launch lidar -->
  <arg name="launch_lidar"
       default="true" 
       doc="Launch the lidar related nodes" />

  <!-- launch powerstatus -->
  <arg name="launch_powerstatus"
       default="true" 
       doc="Launch node to read SMB power status"/>
  
  <arg name="smb_name"
       default="smb261"
       doc="Name of the SMB in the format smb26x (relevant for calibrations)" />

  <!-- Set global simulation parameter -->
  <param name="/simulation" value="false"/>

  <!-- Robosense LiDAR -->
  <group if="$(arg launch_lidar)" >
    <node  name="rslidar_sdk_node" pkg="rslidar_sdk" type="rslidar_sdk_node" output="screen"/>
  </group>

  <!-- Intel RealSense Tracking Camera T265 -->
  <group if="$(arg launch_tracking_cam)" >
    <arg name="camera_name" value="camera" />
	  <group ns="$(arg camera_name)">
      <param name="tracking_module/enable_mapping"           type="bool"   value="false"/>
      <param name="tracking_module/enable_pose_jumping"      type="bool"   value="false"/>
      <param name="tracking_module/enable_relocalization"    type="bool"   value="false"/>
	    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
	      <arg name="tf_prefix"                value="$(arg camera_name)"/>
	      <arg name="serial_no"                value=""/>
	      <arg name="usb_port_id"              value=""/>
	      <arg name="device_type"              value="t265"/>
	      <arg name="enable_pose"              value="true"/>
	      <arg name="enable_accel"             value="true"/>
	      <arg name="enable_gyro"              value="true"/>
	      <arg name="publish_odom_tf"          value="false"/>
	      <arg name="topic_odom_in"            value="/control/smb_diff_drive/odom"/>
	      <arg name="unite_imu_method"         value="linear_interpolation"/>
	      <arg name="calib_odom_file"          value="$(arg tracking_cam_calib_odom_file)"/>
	    </include>
	  </group>
  </group>

  <!-- Intel RealSense Depth Camera D435 -->
  <group if="$(arg launch_depth_cam)" >
   <include file="$(find realsense2_camera)/launch/rs_camera.launch">
     <arg name="camera" value="depth_cam" />
     <arg name="device_type" value="d435" />
   </include>
  </group>

  <!-- launch versavis: ADIS 16448 IMU and FLIR blackfly rgb cam -->
  <group if="$(arg launch_versavis)" >
    <!-- camera name prefix -->
    <arg name="camera_name"             value="BFS" />
    <arg name="camera_type"             value="usb" />
    <!-- option to enable image pipeline (de-bayer and rectification) -->
    <arg name="image_proc"              value="false" />
    <!-- camera manager -->
    <arg name="camera_manager"          value="$(arg camera_name)_camera_manager" />
    <arg name="cam0_serial"             value="0" />
    <arg name="node_start_delay_cam0"   value="5.0" />

    <!-- camera nodelet system -->
    <!-- nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="$(arg camera_manager)"
          args="manager"
          output="screen"
          required="true" >
        <param name="num_worker_threads" value="4" />
    </node>

    <group ns="$(arg camera_name)_$(arg camera_type)_0" >
      <!-- camera driver nodelet -->
      <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load spinnaker_camera_driver/SpinnakerCameraNodelet /$(arg camera_manager)"
            launch-prefix="bash -c 'sleep $(arg node_start_delay_cam0); $0 $@'" >

        <param name="frame_id" value="cam0" />
        <param name="serial" value="$(arg cam0_serial)" />
        <param name="acquisition_frame_rate_enable" value="false" />
        <param name="image_format_color_coding" value="BayerRG8" />
        <param name="color_processing_algorithm" value="HQ_LINEAR" />
        <param name="camera_info_url" value="package://smb/config/$(arg smb_name)_cam0.yaml" />

        <!-- Trigger related config -->
        <param name="acquisition_mode" value="Continuous" />
        <param name="trigger_source" value="Line0" /> <!-- Pin 2 -->
        <param name="enable_trigger" value="On" />
        <param name="trigger_activation_mode" value="RisingEdge" />

        <!-- Exposure related config -->
        <param name="exposure_mode" value="Timed" />
        <param name="exposure_auto" value="Continuous" />
        <!-- <param name="exposure_auto" value="Off" />
        <param name="exposure_time" value="6000" /> --> <!-- in microseconds -->
        <param name="line_selector" value="Line2" />
        <param name="line_mode" value="Output" />
        <param name="line_source" value="ExposureActive" />
        <param name="line_inverter" value="false"/>
        <param name="auto_exposure_time_upper_limit" value="5000" />
        <param name="auto_exposure_time_lower_limit" value="300" />

        <!-- Analog related config -->
        <param name="auto_gain" value="Continuous" />
        <param name="auto_white_balance" value="Continuous" />
      </node>
      <node pkg="nodelet" type="nodelet" name="compile_nodelet_cam0"
            args="load versavis/VersaVISSynchronizerNodelet /$(arg camera_manager)"
            output="screen"
            required="true">
        <param name="driver_topic" type="string" value="/$(arg camera_name)_$(arg camera_type)_0/image_numbered" />
        <param name="versavis_topic" type="string" value="/versavis/cam0/" />
        <param name="imu_offset_us" type="int" value="0"/>
      </node>
    </group>

    <!-- Relay publish blackfly s camera_info topic as versavis. -->
    <node name="relay0" pkg="topic_tools" type="relay" args="/$(arg camera_name)_$(arg camera_type)_0/camera_info /versavis/cam0/camera_info" required="true" output="screen"/>

    <!-- Run VersaVIS link. -->
    <node name="rosserial_python" pkg="rosserial_python" type="serial_node.py"
      args="_port:=/dev/versavis _baud:=250000" respawn="true" output="screen" />

    <!-- Reset VersaVIS with ros message -->
    <node pkg="rostopic" type="rostopic" name="resetter"
      args="pub /versavis/reset std_msgs/Bool false --once" output="screen" />

    <!-- Recieve IMU message. -->
    <node name="versavis_imu_receiver" pkg="versavis"
        type="versavis_imu_receiver" required="true" output="screen">
      <!-- ADIS16448AMLZ parameters -->
      <param name="imu_accelerator_sensitivity"           value="0.000833" />
      <!-- <param name="imu_gyro_sensitivity"             value="0.04" /> -->
      <param name="imu_gyro_sensitivity"                  value="0.04" />
      <param name="imu_acceleration_covariance"           value="0.043864908" /> <!-- no idea where it is from -->
      <param name="imu_gyro_covariance"                   value="6e-9" /> <!-- no idea where it is from -->
      <param name="imu_sub_topic"  type="string"          value="/versavis/imu_micro"/>
    </node>

  </group>


  <!-- Launch powerstatus -->
  <group if="$(arg launch_powerstatus)" >
    <include file="$(find smb_powerstatus)/launch/smb_powerstatus.launch"/>
  </group>


</launch>
